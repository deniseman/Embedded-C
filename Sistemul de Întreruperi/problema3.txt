

int digit=0,s=0,m=0,ms=0;
void display(char p, char c)
{
    PORTA &= 0b11110000; //liniile de sel. digit - oprite
    PORTC &= 0b00000000; //liniile de sel. Seg. - oprite
    switch(c){
      case 0:
      PORTC |= 0b00111111;break;//codificare cifra 0
       case 1:
      PORTC |= 0b00000110;break;//codificare cifra 1
       case 2:
      PORTC |= 0b01011011;break;//codificare cifra 2
       case 3:
      PORTC |= 0b01001111;break;//codificare cifra 3
       case 4:
      PORTC |= 0b01100110;break;//codificare cifra 4
       case 5:
      PORTC |= 0b01101101;break;//codificare cifra 5
       case 6:
      PORTC |= 0b01111101;break;//codificare cifra 6
       case 7:
      PORTC |= 0b00000111;break;//codificare cifra 7
       case 8:
      PORTC |= 0b01111111;break;//codificare cifra 8
       case 9:
      PORTC |= 0b01101111;break;//codificare cifra 9
    }
    switch(p){
      case 4:
      PORTA |= 0b00001000;break;//activare digit 1
      case 3:
      PORTA |= 0b00000100;break;//activare digit 2
      case 2:
      PORTA |= 0b00000010;break;//activare digit 3
      case 1:
      PORTA |= 0b00000001;break;//activare digit 4
    }
}
void init_timer(){

        TCCR0 = 0b00001011; //CTC-3,6; Prescaler-0,1,2
        TCNT0 = 0;
        OCR0 = 125;
        TIMSK |= 0b10000010; //set interrupt OCM
}

void Init_INT0(){
      GICR |= (1<<6); // activarea întreruperii externe INT0
      MCUCR |= 0b00000010; // precizare cã evenimentul va avea
      // loc pe frontul descrescãtor

}

void Init_INT1(){
      GICR |= (1<<7); // activarea întreruperii externe INT0
      MCUCR |= 0b00001110; // precizare cã evenimentul va avea
      // loc pe frontul descrescãtor

}

void functie0() iv IVT_ADDR_INT0 ics ICS_AUTO {


               s++;
               if(s==60){
               s=0;
               m++;}
}
void functie1() iv IVT_ADDR_INT1 ics ICS_AUTO {


               m++;
}


void Timer2() iv IVT_ADDR_TIMER2_COMP ics ICS_AUTO {
        digit++;
        switch(digit){
        case 1: display(1,s%10); break;
        case 2: display(2,(s/10)%10); break;
        case 3: display(3,m%10); break;
        case 4: display(4,(m/10)%10); digit=0; break;}
        if (ms == 999){
              s++;
              ms = 0;
              if(s == 60){
                  s = 0;
                  m++;
              }
        }else ms++;


}
void main(){
        DDRA = 0b00001111; //seteazã pinii de ie.ire
        DDRC = 0b11111111;
        DDRD &= ~(1<<3);
        DDRD &= ~(1<<2);
        init_timer();
        Init_INT0();
        Init_INT1();
        SREG |= (1<<7); // activarea globala a întreruperilor
        for(;;);
}