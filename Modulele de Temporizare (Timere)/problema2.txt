Modifica?i exerci?iul 1 pentru a folosi Timer2 ?i un prescaler N = 32. Verifica?i setarea
regi?trilor.
void display(char p, int c)
{
PORTA &= 0b11110000;
PORTC &= 0b00000000;

switch(c){
case 0:
PORTC |=0b00111111;break;
case 1:
PORTC |=0b00000110;break;
case 2:
PORTC |=0b01011011;break;
case 3:
PORTC |=0b01001111;break;
case 4:
PORTC |=0b01100110;break;
case 5:
PORTC |=0b01101101;break;
case 6:
PORTC |=0b01111101;break;
case 7:
PORTC |=0b00000111;break;
case 8:
PORTC |=0b01111111;break;
case 9:
PORTC |=0b01100111;break;
}
switch(p){
case 1:
PORTA |=0b00001000;break;
case 2:
PORTA |=0b0000100;break;
case 3:
PORTA |=0b0000010;break;
case 4:
PORTA |=0b00000001;break;
}
}
void init_timer(){
TCCR2 = 0b00000100; //prescaler 64, mod normal de operare
TCNT2 = 0; //se ini.ializeaza numaratorul cu 0
}
void main() {
char s=0,m=0;
int ms=0;
DDRA |= 0b00001111;
DDRC |= 0b11111111;
init_timer();
for(;;){
if(TCNT2>=125){ //se împline.te o milisecunda
TCNT2 = 0; //resetare software
ms++;
if(ms>=1000){ //împlinirea unei secunde
ms=0;
s++;
}
if(s==60){
s=0;
m++;
}
}
display(4,s%10);
display(3,(s/10)%10);
display(2,m%10);
display(1,(m/10)%10);
}
}