int var = 0;
int acdlX = 0, acdhX = 0;

void display(int poz, int car)
{
     PORTA &= 0b11110000;
     PORTC &= 0b00000000;
     PORTA |= (1<<poz);
     switch(car)
        {
             case 0:  PORTC |=0b00111111;break;
             case 1:  PORTC |=0b00000110;break;
             case 2:  PORTC |=0b01011011;break;
             case 3:  PORTC |=0b01001111;break;
             case 4:  PORTC |=0b01100110;break;
             case 5:  PORTC |=0b01101101;break;
             case 6:  PORTC |=0b01111101;break;
             case 7:  PORTC |=0b00000111;break;
             case 8:  PORTC |=0b01111111;break;
             case 9:  PORTC |=0b01101111;break;
        }
}

void Init_adc()
{
      ADMUX = 0b01000000; //Referinta - AVCC
      ADCSRA= 0b10000111; //Activare CDA; Prescaler = 128;
}

int readADC (char ch)
{

    ADMUX &= 0b11100000; //Reseteazã canalul de conversie, ultimii 5 de 0 repr canalul
    ADMUX |= ch; //Seteazã canalul conv.
    ADCSRA |= (1<<6); //Începe conversia
    while(ADCSRA & (1<<6)) ; //Asteaptã finalizarea conv.
    acdlX = ADCL;
    acdhX = ADCH;
    return (acdhX << 8 | acdlX);
}

void init_timer(){
SREG = 1<<7; // Global Interrupt Enable
TCCR0 = 0b00001011; //CTC-3,6; Prescaler-0,1,2
TCNT0 = 0;
OCR0 = 125;
TIMSK |= 0b00000010; //set interrupt OCM
}

void init_PWM2() //functie de initializare pt configurarea Timer2
{
     DDRD |= 1<<7; //PD7 – pin de iesire
     TCCR2 = 0b01101001; //FastPWM, neinversat, N=1
}

void Antrerupere() iv IVT_ADDR_TIMER0_COMP ics ICS_AUTO
{
    digit++;
    switch(digit){
    case 1: display(0,value%10); break;
    case 2: display(1,(value/10)%10); break;
    case 3: display(2,(value/100)%10); break;
    case 4: display(3,(value/1000)%10); digit=0; break;}
   
 /*if (ms == 999)
    {
        s++;
        ms = 0;
        if(s == 60)
        {
             s = 0;
             m++;
        }
    }
    else ms++;    */
//value=var aux fol pt a afisa pe display val f.u.
    if (ms==99){ value = (readADC(6)/4);
                 OCR2 = value; ms=0; }
    else ms++;
//f.u. se seteaza in registrul OCR2
//pt a varia manual ne folosim de PA6(ADC6)
}


void main() {
     DDRA = 0b00001111; //seteazã pinii de iesire
     DDRC = 0b11111111;

     init_timer();
     init_PWM2();
     Init_adc();
     while(1)
     {}

}